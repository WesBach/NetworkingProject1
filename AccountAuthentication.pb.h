// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AccountAuthentication.proto

#ifndef PROTOBUF_AccountAuthentication_2eproto__INCLUDED
#define PROTOBUF_AccountAuthentication_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_AccountAuthentication_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCreateAccountImpl();
void InitDefaultsCreateAccount();
void InitDefaultsCreateAccountSuccessImpl();
void InitDefaultsCreateAccountSuccess();
void InitDefaultsCreateAccountFailureImpl();
void InitDefaultsCreateAccountFailure();
void InitDefaultsAuthenticateAccountImpl();
void InitDefaultsAuthenticateAccount();
void InitDefaultsAuthenticateAccountSuccessImpl();
void InitDefaultsAuthenticateAccountSuccess();
void InitDefaultsAuthenticateAccountFailureImpl();
void InitDefaultsAuthenticateAccountFailure();
inline void InitDefaults() {
  InitDefaultsCreateAccount();
  InitDefaultsCreateAccountSuccess();
  InitDefaultsCreateAccountFailure();
  InitDefaultsAuthenticateAccount();
  InitDefaultsAuthenticateAccountSuccess();
  InitDefaultsAuthenticateAccountFailure();
}
}  // namespace protobuf_AccountAuthentication_2eproto
namespace AccountAuthentication {
class AuthenticateAccount;
class AuthenticateAccountDefaultTypeInternal;
extern AuthenticateAccountDefaultTypeInternal _AuthenticateAccount_default_instance_;
class AuthenticateAccountFailure;
class AuthenticateAccountFailureDefaultTypeInternal;
extern AuthenticateAccountFailureDefaultTypeInternal _AuthenticateAccountFailure_default_instance_;
class AuthenticateAccountSuccess;
class AuthenticateAccountSuccessDefaultTypeInternal;
extern AuthenticateAccountSuccessDefaultTypeInternal _AuthenticateAccountSuccess_default_instance_;
class CreateAccount;
class CreateAccountDefaultTypeInternal;
extern CreateAccountDefaultTypeInternal _CreateAccount_default_instance_;
class CreateAccountFailure;
class CreateAccountFailureDefaultTypeInternal;
extern CreateAccountFailureDefaultTypeInternal _CreateAccountFailure_default_instance_;
class CreateAccountSuccess;
class CreateAccountSuccessDefaultTypeInternal;
extern CreateAccountSuccessDefaultTypeInternal _CreateAccountSuccess_default_instance_;
}  // namespace AccountAuthentication
namespace AccountAuthentication {

enum CreateAccountFailure_CreateFailureReason {
  CreateAccountFailure_CreateFailureReason_ACCOUNT_ALREADY_EXISTS = 0,
  CreateAccountFailure_CreateFailureReason_INVALID_PASSWORD = 1,
  CreateAccountFailure_CreateFailureReason_INTERNAL_SERVER_ERROR = 2
};
bool CreateAccountFailure_CreateFailureReason_IsValid(int value);
const CreateAccountFailure_CreateFailureReason CreateAccountFailure_CreateFailureReason_CreateFailureReason_MIN = CreateAccountFailure_CreateFailureReason_ACCOUNT_ALREADY_EXISTS;
const CreateAccountFailure_CreateFailureReason CreateAccountFailure_CreateFailureReason_CreateFailureReason_MAX = CreateAccountFailure_CreateFailureReason_INTERNAL_SERVER_ERROR;
const int CreateAccountFailure_CreateFailureReason_CreateFailureReason_ARRAYSIZE = CreateAccountFailure_CreateFailureReason_CreateFailureReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* CreateAccountFailure_CreateFailureReason_descriptor();
inline const ::std::string& CreateAccountFailure_CreateFailureReason_Name(CreateAccountFailure_CreateFailureReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    CreateAccountFailure_CreateFailureReason_descriptor(), value);
}
inline bool CreateAccountFailure_CreateFailureReason_Parse(
    const ::std::string& name, CreateAccountFailure_CreateFailureReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CreateAccountFailure_CreateFailureReason>(
    CreateAccountFailure_CreateFailureReason_descriptor(), name, value);
}
enum AuthenticateAccountFailure_AuthenticateFailureReason {
  AuthenticateAccountFailure_AuthenticateFailureReason_INVALID_CREDENTIALS = 0,
  AuthenticateAccountFailure_AuthenticateFailureReason_INTERNAL_SERVER_ERROR = 1
};
bool AuthenticateAccountFailure_AuthenticateFailureReason_IsValid(int value);
const AuthenticateAccountFailure_AuthenticateFailureReason AuthenticateAccountFailure_AuthenticateFailureReason_AuthenticateFailureReason_MIN = AuthenticateAccountFailure_AuthenticateFailureReason_INVALID_CREDENTIALS;
const AuthenticateAccountFailure_AuthenticateFailureReason AuthenticateAccountFailure_AuthenticateFailureReason_AuthenticateFailureReason_MAX = AuthenticateAccountFailure_AuthenticateFailureReason_INTERNAL_SERVER_ERROR;
const int AuthenticateAccountFailure_AuthenticateFailureReason_AuthenticateFailureReason_ARRAYSIZE = AuthenticateAccountFailure_AuthenticateFailureReason_AuthenticateFailureReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* AuthenticateAccountFailure_AuthenticateFailureReason_descriptor();
inline const ::std::string& AuthenticateAccountFailure_AuthenticateFailureReason_Name(AuthenticateAccountFailure_AuthenticateFailureReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    AuthenticateAccountFailure_AuthenticateFailureReason_descriptor(), value);
}
inline bool AuthenticateAccountFailure_AuthenticateFailureReason_Parse(
    const ::std::string& name, AuthenticateAccountFailure_AuthenticateFailureReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AuthenticateAccountFailure_AuthenticateFailureReason>(
    AuthenticateAccountFailure_AuthenticateFailureReason_descriptor(), name, value);
}
// ===================================================================

class CreateAccount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AccountAuthentication.CreateAccount) */ {
 public:
  CreateAccount();
  virtual ~CreateAccount();

  CreateAccount(const CreateAccount& from);

  inline CreateAccount& operator=(const CreateAccount& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateAccount(CreateAccount&& from) noexcept
    : CreateAccount() {
    *this = ::std::move(from);
  }

  inline CreateAccount& operator=(CreateAccount&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateAccount& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateAccount* internal_default_instance() {
    return reinterpret_cast<const CreateAccount*>(
               &_CreateAccount_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CreateAccount* other);
  friend void swap(CreateAccount& a, CreateAccount& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateAccount* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateAccount* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateAccount& from);
  void MergeFrom(const CreateAccount& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateAccount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string email = 2;
  bool has_email() const;
  void clear_email();
  static const int kEmailFieldNumber = 2;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  #if LANG_CXX11
  void set_email(::std::string&& value);
  #endif
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // required string plaintextPassword = 3;
  bool has_plaintextpassword() const;
  void clear_plaintextpassword();
  static const int kPlaintextPasswordFieldNumber = 3;
  const ::std::string& plaintextpassword() const;
  void set_plaintextpassword(const ::std::string& value);
  #if LANG_CXX11
  void set_plaintextpassword(::std::string&& value);
  #endif
  void set_plaintextpassword(const char* value);
  void set_plaintextpassword(const char* value, size_t size);
  ::std::string* mutable_plaintextpassword();
  ::std::string* release_plaintextpassword();
  void set_allocated_plaintextpassword(::std::string* plaintextpassword);

  // required uint64 requestId = 1;
  bool has_requestid() const;
  void clear_requestid();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint64 requestid() const;
  void set_requestid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:AccountAuthentication.CreateAccount)
 private:
  void set_has_requestid();
  void clear_has_requestid();
  void set_has_email();
  void clear_has_email();
  void set_has_plaintextpassword();
  void clear_has_plaintextpassword();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::internal::ArenaStringPtr plaintextpassword_;
  ::google::protobuf::uint64 requestid_;
  friend struct ::protobuf_AccountAuthentication_2eproto::TableStruct;
  friend void ::protobuf_AccountAuthentication_2eproto::InitDefaultsCreateAccountImpl();
};
// -------------------------------------------------------------------

class CreateAccountSuccess : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AccountAuthentication.CreateAccountSuccess) */ {
 public:
  CreateAccountSuccess();
  virtual ~CreateAccountSuccess();

  CreateAccountSuccess(const CreateAccountSuccess& from);

  inline CreateAccountSuccess& operator=(const CreateAccountSuccess& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateAccountSuccess(CreateAccountSuccess&& from) noexcept
    : CreateAccountSuccess() {
    *this = ::std::move(from);
  }

  inline CreateAccountSuccess& operator=(CreateAccountSuccess&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateAccountSuccess& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateAccountSuccess* internal_default_instance() {
    return reinterpret_cast<const CreateAccountSuccess*>(
               &_CreateAccountSuccess_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CreateAccountSuccess* other);
  friend void swap(CreateAccountSuccess& a, CreateAccountSuccess& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateAccountSuccess* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateAccountSuccess* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateAccountSuccess& from);
  void MergeFrom(const CreateAccountSuccess& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateAccountSuccess* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 requestId = 1;
  bool has_requestid() const;
  void clear_requestid();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint64 requestid() const;
  void set_requestid(::google::protobuf::uint64 value);

  // required uint64 userId = 2;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 2;
  ::google::protobuf::uint64 userid() const;
  void set_userid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:AccountAuthentication.CreateAccountSuccess)
 private:
  void set_has_requestid();
  void clear_has_requestid();
  void set_has_userid();
  void clear_has_userid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 requestid_;
  ::google::protobuf::uint64 userid_;
  friend struct ::protobuf_AccountAuthentication_2eproto::TableStruct;
  friend void ::protobuf_AccountAuthentication_2eproto::InitDefaultsCreateAccountSuccessImpl();
};
// -------------------------------------------------------------------

class CreateAccountFailure : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AccountAuthentication.CreateAccountFailure) */ {
 public:
  CreateAccountFailure();
  virtual ~CreateAccountFailure();

  CreateAccountFailure(const CreateAccountFailure& from);

  inline CreateAccountFailure& operator=(const CreateAccountFailure& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateAccountFailure(CreateAccountFailure&& from) noexcept
    : CreateAccountFailure() {
    *this = ::std::move(from);
  }

  inline CreateAccountFailure& operator=(CreateAccountFailure&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateAccountFailure& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateAccountFailure* internal_default_instance() {
    return reinterpret_cast<const CreateAccountFailure*>(
               &_CreateAccountFailure_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CreateAccountFailure* other);
  friend void swap(CreateAccountFailure& a, CreateAccountFailure& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateAccountFailure* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateAccountFailure* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateAccountFailure& from);
  void MergeFrom(const CreateAccountFailure& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateAccountFailure* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CreateAccountFailure_CreateFailureReason CreateFailureReason;
  static const CreateFailureReason ACCOUNT_ALREADY_EXISTS =
    CreateAccountFailure_CreateFailureReason_ACCOUNT_ALREADY_EXISTS;
  static const CreateFailureReason INVALID_PASSWORD =
    CreateAccountFailure_CreateFailureReason_INVALID_PASSWORD;
  static const CreateFailureReason INTERNAL_SERVER_ERROR =
    CreateAccountFailure_CreateFailureReason_INTERNAL_SERVER_ERROR;
  static inline bool CreateFailureReason_IsValid(int value) {
    return CreateAccountFailure_CreateFailureReason_IsValid(value);
  }
  static const CreateFailureReason CreateFailureReason_MIN =
    CreateAccountFailure_CreateFailureReason_CreateFailureReason_MIN;
  static const CreateFailureReason CreateFailureReason_MAX =
    CreateAccountFailure_CreateFailureReason_CreateFailureReason_MAX;
  static const int CreateFailureReason_ARRAYSIZE =
    CreateAccountFailure_CreateFailureReason_CreateFailureReason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CreateFailureReason_descriptor() {
    return CreateAccountFailure_CreateFailureReason_descriptor();
  }
  static inline const ::std::string& CreateFailureReason_Name(CreateFailureReason value) {
    return CreateAccountFailure_CreateFailureReason_Name(value);
  }
  static inline bool CreateFailureReason_Parse(const ::std::string& name,
      CreateFailureReason* value) {
    return CreateAccountFailure_CreateFailureReason_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint64 requestId = 1;
  bool has_requestid() const;
  void clear_requestid();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint64 requestid() const;
  void set_requestid(::google::protobuf::uint64 value);

  // required .AccountAuthentication.CreateAccountFailure.CreateFailureReason reason = 2 [default = INTERNAL_SERVER_ERROR];
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 2;
  ::AccountAuthentication::CreateAccountFailure_CreateFailureReason reason() const;
  void set_reason(::AccountAuthentication::CreateAccountFailure_CreateFailureReason value);

  // @@protoc_insertion_point(class_scope:AccountAuthentication.CreateAccountFailure)
 private:
  void set_has_requestid();
  void clear_has_requestid();
  void set_has_reason();
  void clear_has_reason();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 requestid_;
  int reason_;
  friend struct ::protobuf_AccountAuthentication_2eproto::TableStruct;
  friend void ::protobuf_AccountAuthentication_2eproto::InitDefaultsCreateAccountFailureImpl();
};
// -------------------------------------------------------------------

class AuthenticateAccount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AccountAuthentication.AuthenticateAccount) */ {
 public:
  AuthenticateAccount();
  virtual ~AuthenticateAccount();

  AuthenticateAccount(const AuthenticateAccount& from);

  inline AuthenticateAccount& operator=(const AuthenticateAccount& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuthenticateAccount(AuthenticateAccount&& from) noexcept
    : AuthenticateAccount() {
    *this = ::std::move(from);
  }

  inline AuthenticateAccount& operator=(AuthenticateAccount&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthenticateAccount& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AuthenticateAccount* internal_default_instance() {
    return reinterpret_cast<const AuthenticateAccount*>(
               &_AuthenticateAccount_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(AuthenticateAccount* other);
  friend void swap(AuthenticateAccount& a, AuthenticateAccount& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuthenticateAccount* New() const PROTOBUF_FINAL { return New(NULL); }

  AuthenticateAccount* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AuthenticateAccount& from);
  void MergeFrom(const AuthenticateAccount& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AuthenticateAccount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string email = 2;
  bool has_email() const;
  void clear_email();
  static const int kEmailFieldNumber = 2;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  #if LANG_CXX11
  void set_email(::std::string&& value);
  #endif
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // required string plaintextPassword = 3;
  bool has_plaintextpassword() const;
  void clear_plaintextpassword();
  static const int kPlaintextPasswordFieldNumber = 3;
  const ::std::string& plaintextpassword() const;
  void set_plaintextpassword(const ::std::string& value);
  #if LANG_CXX11
  void set_plaintextpassword(::std::string&& value);
  #endif
  void set_plaintextpassword(const char* value);
  void set_plaintextpassword(const char* value, size_t size);
  ::std::string* mutable_plaintextpassword();
  ::std::string* release_plaintextpassword();
  void set_allocated_plaintextpassword(::std::string* plaintextpassword);

  // required uint64 requestId = 1;
  bool has_requestid() const;
  void clear_requestid();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint64 requestid() const;
  void set_requestid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:AccountAuthentication.AuthenticateAccount)
 private:
  void set_has_requestid();
  void clear_has_requestid();
  void set_has_email();
  void clear_has_email();
  void set_has_plaintextpassword();
  void clear_has_plaintextpassword();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::internal::ArenaStringPtr plaintextpassword_;
  ::google::protobuf::uint64 requestid_;
  friend struct ::protobuf_AccountAuthentication_2eproto::TableStruct;
  friend void ::protobuf_AccountAuthentication_2eproto::InitDefaultsAuthenticateAccountImpl();
};
// -------------------------------------------------------------------

class AuthenticateAccountSuccess : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AccountAuthentication.AuthenticateAccountSuccess) */ {
 public:
  AuthenticateAccountSuccess();
  virtual ~AuthenticateAccountSuccess();

  AuthenticateAccountSuccess(const AuthenticateAccountSuccess& from);

  inline AuthenticateAccountSuccess& operator=(const AuthenticateAccountSuccess& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuthenticateAccountSuccess(AuthenticateAccountSuccess&& from) noexcept
    : AuthenticateAccountSuccess() {
    *this = ::std::move(from);
  }

  inline AuthenticateAccountSuccess& operator=(AuthenticateAccountSuccess&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthenticateAccountSuccess& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AuthenticateAccountSuccess* internal_default_instance() {
    return reinterpret_cast<const AuthenticateAccountSuccess*>(
               &_AuthenticateAccountSuccess_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(AuthenticateAccountSuccess* other);
  friend void swap(AuthenticateAccountSuccess& a, AuthenticateAccountSuccess& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuthenticateAccountSuccess* New() const PROTOBUF_FINAL { return New(NULL); }

  AuthenticateAccountSuccess* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AuthenticateAccountSuccess& from);
  void MergeFrom(const AuthenticateAccountSuccess& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AuthenticateAccountSuccess* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string creationDate = 3;
  bool has_creationdate() const;
  void clear_creationdate();
  static const int kCreationDateFieldNumber = 3;
  const ::std::string& creationdate() const;
  void set_creationdate(const ::std::string& value);
  #if LANG_CXX11
  void set_creationdate(::std::string&& value);
  #endif
  void set_creationdate(const char* value);
  void set_creationdate(const char* value, size_t size);
  ::std::string* mutable_creationdate();
  ::std::string* release_creationdate();
  void set_allocated_creationdate(::std::string* creationdate);

  // required uint64 requestId = 1;
  bool has_requestid() const;
  void clear_requestid();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint64 requestid() const;
  void set_requestid(::google::protobuf::uint64 value);

  // required uint64 userId = 2;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 2;
  ::google::protobuf::uint64 userid() const;
  void set_userid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:AccountAuthentication.AuthenticateAccountSuccess)
 private:
  void set_has_requestid();
  void clear_has_requestid();
  void set_has_userid();
  void clear_has_userid();
  void set_has_creationdate();
  void clear_has_creationdate();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr creationdate_;
  ::google::protobuf::uint64 requestid_;
  ::google::protobuf::uint64 userid_;
  friend struct ::protobuf_AccountAuthentication_2eproto::TableStruct;
  friend void ::protobuf_AccountAuthentication_2eproto::InitDefaultsAuthenticateAccountSuccessImpl();
};
// -------------------------------------------------------------------

class AuthenticateAccountFailure : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AccountAuthentication.AuthenticateAccountFailure) */ {
 public:
  AuthenticateAccountFailure();
  virtual ~AuthenticateAccountFailure();

  AuthenticateAccountFailure(const AuthenticateAccountFailure& from);

  inline AuthenticateAccountFailure& operator=(const AuthenticateAccountFailure& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuthenticateAccountFailure(AuthenticateAccountFailure&& from) noexcept
    : AuthenticateAccountFailure() {
    *this = ::std::move(from);
  }

  inline AuthenticateAccountFailure& operator=(AuthenticateAccountFailure&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthenticateAccountFailure& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AuthenticateAccountFailure* internal_default_instance() {
    return reinterpret_cast<const AuthenticateAccountFailure*>(
               &_AuthenticateAccountFailure_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(AuthenticateAccountFailure* other);
  friend void swap(AuthenticateAccountFailure& a, AuthenticateAccountFailure& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuthenticateAccountFailure* New() const PROTOBUF_FINAL { return New(NULL); }

  AuthenticateAccountFailure* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AuthenticateAccountFailure& from);
  void MergeFrom(const AuthenticateAccountFailure& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AuthenticateAccountFailure* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AuthenticateAccountFailure_AuthenticateFailureReason AuthenticateFailureReason;
  static const AuthenticateFailureReason INVALID_CREDENTIALS =
    AuthenticateAccountFailure_AuthenticateFailureReason_INVALID_CREDENTIALS;
  static const AuthenticateFailureReason INTERNAL_SERVER_ERROR =
    AuthenticateAccountFailure_AuthenticateFailureReason_INTERNAL_SERVER_ERROR;
  static inline bool AuthenticateFailureReason_IsValid(int value) {
    return AuthenticateAccountFailure_AuthenticateFailureReason_IsValid(value);
  }
  static const AuthenticateFailureReason AuthenticateFailureReason_MIN =
    AuthenticateAccountFailure_AuthenticateFailureReason_AuthenticateFailureReason_MIN;
  static const AuthenticateFailureReason AuthenticateFailureReason_MAX =
    AuthenticateAccountFailure_AuthenticateFailureReason_AuthenticateFailureReason_MAX;
  static const int AuthenticateFailureReason_ARRAYSIZE =
    AuthenticateAccountFailure_AuthenticateFailureReason_AuthenticateFailureReason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AuthenticateFailureReason_descriptor() {
    return AuthenticateAccountFailure_AuthenticateFailureReason_descriptor();
  }
  static inline const ::std::string& AuthenticateFailureReason_Name(AuthenticateFailureReason value) {
    return AuthenticateAccountFailure_AuthenticateFailureReason_Name(value);
  }
  static inline bool AuthenticateFailureReason_Parse(const ::std::string& name,
      AuthenticateFailureReason* value) {
    return AuthenticateAccountFailure_AuthenticateFailureReason_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint64 requestId = 1;
  bool has_requestid() const;
  void clear_requestid();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint64 requestid() const;
  void set_requestid(::google::protobuf::uint64 value);

  // required .AccountAuthentication.AuthenticateAccountFailure.AuthenticateFailureReason reason = 2 [default = INTERNAL_SERVER_ERROR];
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 2;
  ::AccountAuthentication::AuthenticateAccountFailure_AuthenticateFailureReason reason() const;
  void set_reason(::AccountAuthentication::AuthenticateAccountFailure_AuthenticateFailureReason value);

  // @@protoc_insertion_point(class_scope:AccountAuthentication.AuthenticateAccountFailure)
 private:
  void set_has_requestid();
  void clear_has_requestid();
  void set_has_reason();
  void clear_has_reason();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 requestid_;
  int reason_;
  friend struct ::protobuf_AccountAuthentication_2eproto::TableStruct;
  friend void ::protobuf_AccountAuthentication_2eproto::InitDefaultsAuthenticateAccountFailureImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CreateAccount

// required uint64 requestId = 1;
inline bool CreateAccount::has_requestid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateAccount::set_has_requestid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateAccount::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateAccount::clear_requestid() {
  requestid_ = GOOGLE_ULONGLONG(0);
  clear_has_requestid();
}
inline ::google::protobuf::uint64 CreateAccount::requestid() const {
  // @@protoc_insertion_point(field_get:AccountAuthentication.CreateAccount.requestId)
  return requestid_;
}
inline void CreateAccount::set_requestid(::google::protobuf::uint64 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:AccountAuthentication.CreateAccount.requestId)
}

// required string email = 2;
inline bool CreateAccount::has_email() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateAccount::set_has_email() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateAccount::clear_has_email() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateAccount::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
inline const ::std::string& CreateAccount::email() const {
  // @@protoc_insertion_point(field_get:AccountAuthentication.CreateAccount.email)
  return email_.GetNoArena();
}
inline void CreateAccount::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountAuthentication.CreateAccount.email)
}
#if LANG_CXX11
inline void CreateAccount::set_email(::std::string&& value) {
  set_has_email();
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountAuthentication.CreateAccount.email)
}
#endif
inline void CreateAccount::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountAuthentication.CreateAccount.email)
}
inline void CreateAccount::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountAuthentication.CreateAccount.email)
}
inline ::std::string* CreateAccount::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:AccountAuthentication.CreateAccount.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateAccount::release_email() {
  // @@protoc_insertion_point(field_release:AccountAuthentication.CreateAccount.email)
  clear_has_email();
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateAccount::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:AccountAuthentication.CreateAccount.email)
}

// required string plaintextPassword = 3;
inline bool CreateAccount::has_plaintextpassword() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateAccount::set_has_plaintextpassword() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateAccount::clear_has_plaintextpassword() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateAccount::clear_plaintextpassword() {
  plaintextpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_plaintextpassword();
}
inline const ::std::string& CreateAccount::plaintextpassword() const {
  // @@protoc_insertion_point(field_get:AccountAuthentication.CreateAccount.plaintextPassword)
  return plaintextpassword_.GetNoArena();
}
inline void CreateAccount::set_plaintextpassword(const ::std::string& value) {
  set_has_plaintextpassword();
  plaintextpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountAuthentication.CreateAccount.plaintextPassword)
}
#if LANG_CXX11
inline void CreateAccount::set_plaintextpassword(::std::string&& value) {
  set_has_plaintextpassword();
  plaintextpassword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountAuthentication.CreateAccount.plaintextPassword)
}
#endif
inline void CreateAccount::set_plaintextpassword(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_plaintextpassword();
  plaintextpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountAuthentication.CreateAccount.plaintextPassword)
}
inline void CreateAccount::set_plaintextpassword(const char* value, size_t size) {
  set_has_plaintextpassword();
  plaintextpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountAuthentication.CreateAccount.plaintextPassword)
}
inline ::std::string* CreateAccount::mutable_plaintextpassword() {
  set_has_plaintextpassword();
  // @@protoc_insertion_point(field_mutable:AccountAuthentication.CreateAccount.plaintextPassword)
  return plaintextpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateAccount::release_plaintextpassword() {
  // @@protoc_insertion_point(field_release:AccountAuthentication.CreateAccount.plaintextPassword)
  clear_has_plaintextpassword();
  return plaintextpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateAccount::set_allocated_plaintextpassword(::std::string* plaintextpassword) {
  if (plaintextpassword != NULL) {
    set_has_plaintextpassword();
  } else {
    clear_has_plaintextpassword();
  }
  plaintextpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plaintextpassword);
  // @@protoc_insertion_point(field_set_allocated:AccountAuthentication.CreateAccount.plaintextPassword)
}

// -------------------------------------------------------------------

// CreateAccountSuccess

// required uint64 requestId = 1;
inline bool CreateAccountSuccess::has_requestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateAccountSuccess::set_has_requestid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateAccountSuccess::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateAccountSuccess::clear_requestid() {
  requestid_ = GOOGLE_ULONGLONG(0);
  clear_has_requestid();
}
inline ::google::protobuf::uint64 CreateAccountSuccess::requestid() const {
  // @@protoc_insertion_point(field_get:AccountAuthentication.CreateAccountSuccess.requestId)
  return requestid_;
}
inline void CreateAccountSuccess::set_requestid(::google::protobuf::uint64 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:AccountAuthentication.CreateAccountSuccess.requestId)
}

// required uint64 userId = 2;
inline bool CreateAccountSuccess::has_userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateAccountSuccess::set_has_userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateAccountSuccess::clear_has_userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateAccountSuccess::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
  clear_has_userid();
}
inline ::google::protobuf::uint64 CreateAccountSuccess::userid() const {
  // @@protoc_insertion_point(field_get:AccountAuthentication.CreateAccountSuccess.userId)
  return userid_;
}
inline void CreateAccountSuccess::set_userid(::google::protobuf::uint64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:AccountAuthentication.CreateAccountSuccess.userId)
}

// -------------------------------------------------------------------

// CreateAccountFailure

// required uint64 requestId = 1;
inline bool CreateAccountFailure::has_requestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateAccountFailure::set_has_requestid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateAccountFailure::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateAccountFailure::clear_requestid() {
  requestid_ = GOOGLE_ULONGLONG(0);
  clear_has_requestid();
}
inline ::google::protobuf::uint64 CreateAccountFailure::requestid() const {
  // @@protoc_insertion_point(field_get:AccountAuthentication.CreateAccountFailure.requestId)
  return requestid_;
}
inline void CreateAccountFailure::set_requestid(::google::protobuf::uint64 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:AccountAuthentication.CreateAccountFailure.requestId)
}

// required .AccountAuthentication.CreateAccountFailure.CreateFailureReason reason = 2 [default = INTERNAL_SERVER_ERROR];
inline bool CreateAccountFailure::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateAccountFailure::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateAccountFailure::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateAccountFailure::clear_reason() {
  reason_ = 2;
  clear_has_reason();
}
inline ::AccountAuthentication::CreateAccountFailure_CreateFailureReason CreateAccountFailure::reason() const {
  // @@protoc_insertion_point(field_get:AccountAuthentication.CreateAccountFailure.reason)
  return static_cast< ::AccountAuthentication::CreateAccountFailure_CreateFailureReason >(reason_);
}
inline void CreateAccountFailure::set_reason(::AccountAuthentication::CreateAccountFailure_CreateFailureReason value) {
  assert(::AccountAuthentication::CreateAccountFailure_CreateFailureReason_IsValid(value));
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:AccountAuthentication.CreateAccountFailure.reason)
}

// -------------------------------------------------------------------

// AuthenticateAccount

// required uint64 requestId = 1;
inline bool AuthenticateAccount::has_requestid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AuthenticateAccount::set_has_requestid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AuthenticateAccount::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AuthenticateAccount::clear_requestid() {
  requestid_ = GOOGLE_ULONGLONG(0);
  clear_has_requestid();
}
inline ::google::protobuf::uint64 AuthenticateAccount::requestid() const {
  // @@protoc_insertion_point(field_get:AccountAuthentication.AuthenticateAccount.requestId)
  return requestid_;
}
inline void AuthenticateAccount::set_requestid(::google::protobuf::uint64 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:AccountAuthentication.AuthenticateAccount.requestId)
}

// required string email = 2;
inline bool AuthenticateAccount::has_email() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthenticateAccount::set_has_email() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthenticateAccount::clear_has_email() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthenticateAccount::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
inline const ::std::string& AuthenticateAccount::email() const {
  // @@protoc_insertion_point(field_get:AccountAuthentication.AuthenticateAccount.email)
  return email_.GetNoArena();
}
inline void AuthenticateAccount::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountAuthentication.AuthenticateAccount.email)
}
#if LANG_CXX11
inline void AuthenticateAccount::set_email(::std::string&& value) {
  set_has_email();
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountAuthentication.AuthenticateAccount.email)
}
#endif
inline void AuthenticateAccount::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountAuthentication.AuthenticateAccount.email)
}
inline void AuthenticateAccount::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountAuthentication.AuthenticateAccount.email)
}
inline ::std::string* AuthenticateAccount::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:AccountAuthentication.AuthenticateAccount.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthenticateAccount::release_email() {
  // @@protoc_insertion_point(field_release:AccountAuthentication.AuthenticateAccount.email)
  clear_has_email();
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthenticateAccount::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:AccountAuthentication.AuthenticateAccount.email)
}

// required string plaintextPassword = 3;
inline bool AuthenticateAccount::has_plaintextpassword() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuthenticateAccount::set_has_plaintextpassword() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuthenticateAccount::clear_has_plaintextpassword() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuthenticateAccount::clear_plaintextpassword() {
  plaintextpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_plaintextpassword();
}
inline const ::std::string& AuthenticateAccount::plaintextpassword() const {
  // @@protoc_insertion_point(field_get:AccountAuthentication.AuthenticateAccount.plaintextPassword)
  return plaintextpassword_.GetNoArena();
}
inline void AuthenticateAccount::set_plaintextpassword(const ::std::string& value) {
  set_has_plaintextpassword();
  plaintextpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountAuthentication.AuthenticateAccount.plaintextPassword)
}
#if LANG_CXX11
inline void AuthenticateAccount::set_plaintextpassword(::std::string&& value) {
  set_has_plaintextpassword();
  plaintextpassword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountAuthentication.AuthenticateAccount.plaintextPassword)
}
#endif
inline void AuthenticateAccount::set_plaintextpassword(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_plaintextpassword();
  plaintextpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountAuthentication.AuthenticateAccount.plaintextPassword)
}
inline void AuthenticateAccount::set_plaintextpassword(const char* value, size_t size) {
  set_has_plaintextpassword();
  plaintextpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountAuthentication.AuthenticateAccount.plaintextPassword)
}
inline ::std::string* AuthenticateAccount::mutable_plaintextpassword() {
  set_has_plaintextpassword();
  // @@protoc_insertion_point(field_mutable:AccountAuthentication.AuthenticateAccount.plaintextPassword)
  return plaintextpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthenticateAccount::release_plaintextpassword() {
  // @@protoc_insertion_point(field_release:AccountAuthentication.AuthenticateAccount.plaintextPassword)
  clear_has_plaintextpassword();
  return plaintextpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthenticateAccount::set_allocated_plaintextpassword(::std::string* plaintextpassword) {
  if (plaintextpassword != NULL) {
    set_has_plaintextpassword();
  } else {
    clear_has_plaintextpassword();
  }
  plaintextpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plaintextpassword);
  // @@protoc_insertion_point(field_set_allocated:AccountAuthentication.AuthenticateAccount.plaintextPassword)
}

// -------------------------------------------------------------------

// AuthenticateAccountSuccess

// required uint64 requestId = 1;
inline bool AuthenticateAccountSuccess::has_requestid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuthenticateAccountSuccess::set_has_requestid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuthenticateAccountSuccess::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuthenticateAccountSuccess::clear_requestid() {
  requestid_ = GOOGLE_ULONGLONG(0);
  clear_has_requestid();
}
inline ::google::protobuf::uint64 AuthenticateAccountSuccess::requestid() const {
  // @@protoc_insertion_point(field_get:AccountAuthentication.AuthenticateAccountSuccess.requestId)
  return requestid_;
}
inline void AuthenticateAccountSuccess::set_requestid(::google::protobuf::uint64 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:AccountAuthentication.AuthenticateAccountSuccess.requestId)
}

// required uint64 userId = 2;
inline bool AuthenticateAccountSuccess::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AuthenticateAccountSuccess::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AuthenticateAccountSuccess::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AuthenticateAccountSuccess::clear_userid() {
  userid_ = GOOGLE_ULONGLONG(0);
  clear_has_userid();
}
inline ::google::protobuf::uint64 AuthenticateAccountSuccess::userid() const {
  // @@protoc_insertion_point(field_get:AccountAuthentication.AuthenticateAccountSuccess.userId)
  return userid_;
}
inline void AuthenticateAccountSuccess::set_userid(::google::protobuf::uint64 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:AccountAuthentication.AuthenticateAccountSuccess.userId)
}

// required string creationDate = 3;
inline bool AuthenticateAccountSuccess::has_creationdate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthenticateAccountSuccess::set_has_creationdate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthenticateAccountSuccess::clear_has_creationdate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthenticateAccountSuccess::clear_creationdate() {
  creationdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_creationdate();
}
inline const ::std::string& AuthenticateAccountSuccess::creationdate() const {
  // @@protoc_insertion_point(field_get:AccountAuthentication.AuthenticateAccountSuccess.creationDate)
  return creationdate_.GetNoArena();
}
inline void AuthenticateAccountSuccess::set_creationdate(const ::std::string& value) {
  set_has_creationdate();
  creationdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AccountAuthentication.AuthenticateAccountSuccess.creationDate)
}
#if LANG_CXX11
inline void AuthenticateAccountSuccess::set_creationdate(::std::string&& value) {
  set_has_creationdate();
  creationdate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AccountAuthentication.AuthenticateAccountSuccess.creationDate)
}
#endif
inline void AuthenticateAccountSuccess::set_creationdate(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_creationdate();
  creationdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AccountAuthentication.AuthenticateAccountSuccess.creationDate)
}
inline void AuthenticateAccountSuccess::set_creationdate(const char* value, size_t size) {
  set_has_creationdate();
  creationdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AccountAuthentication.AuthenticateAccountSuccess.creationDate)
}
inline ::std::string* AuthenticateAccountSuccess::mutable_creationdate() {
  set_has_creationdate();
  // @@protoc_insertion_point(field_mutable:AccountAuthentication.AuthenticateAccountSuccess.creationDate)
  return creationdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthenticateAccountSuccess::release_creationdate() {
  // @@protoc_insertion_point(field_release:AccountAuthentication.AuthenticateAccountSuccess.creationDate)
  clear_has_creationdate();
  return creationdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthenticateAccountSuccess::set_allocated_creationdate(::std::string* creationdate) {
  if (creationdate != NULL) {
    set_has_creationdate();
  } else {
    clear_has_creationdate();
  }
  creationdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creationdate);
  // @@protoc_insertion_point(field_set_allocated:AccountAuthentication.AuthenticateAccountSuccess.creationDate)
}

// -------------------------------------------------------------------

// AuthenticateAccountFailure

// required uint64 requestId = 1;
inline bool AuthenticateAccountFailure::has_requestid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthenticateAccountFailure::set_has_requestid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthenticateAccountFailure::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthenticateAccountFailure::clear_requestid() {
  requestid_ = GOOGLE_ULONGLONG(0);
  clear_has_requestid();
}
inline ::google::protobuf::uint64 AuthenticateAccountFailure::requestid() const {
  // @@protoc_insertion_point(field_get:AccountAuthentication.AuthenticateAccountFailure.requestId)
  return requestid_;
}
inline void AuthenticateAccountFailure::set_requestid(::google::protobuf::uint64 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:AccountAuthentication.AuthenticateAccountFailure.requestId)
}

// required .AccountAuthentication.AuthenticateAccountFailure.AuthenticateFailureReason reason = 2 [default = INTERNAL_SERVER_ERROR];
inline bool AuthenticateAccountFailure::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuthenticateAccountFailure::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuthenticateAccountFailure::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuthenticateAccountFailure::clear_reason() {
  reason_ = 1;
  clear_has_reason();
}
inline ::AccountAuthentication::AuthenticateAccountFailure_AuthenticateFailureReason AuthenticateAccountFailure::reason() const {
  // @@protoc_insertion_point(field_get:AccountAuthentication.AuthenticateAccountFailure.reason)
  return static_cast< ::AccountAuthentication::AuthenticateAccountFailure_AuthenticateFailureReason >(reason_);
}
inline void AuthenticateAccountFailure::set_reason(::AccountAuthentication::AuthenticateAccountFailure_AuthenticateFailureReason value) {
  assert(::AccountAuthentication::AuthenticateAccountFailure_AuthenticateFailureReason_IsValid(value));
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:AccountAuthentication.AuthenticateAccountFailure.reason)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace AccountAuthentication

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::AccountAuthentication::CreateAccountFailure_CreateFailureReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::AccountAuthentication::CreateAccountFailure_CreateFailureReason>() {
  return ::AccountAuthentication::CreateAccountFailure_CreateFailureReason_descriptor();
}
template <> struct is_proto_enum< ::AccountAuthentication::AuthenticateAccountFailure_AuthenticateFailureReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::AccountAuthentication::AuthenticateAccountFailure_AuthenticateFailureReason>() {
  return ::AccountAuthentication::AuthenticateAccountFailure_AuthenticateFailureReason_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AccountAuthentication_2eproto__INCLUDED
