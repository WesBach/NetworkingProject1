// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AccountAuthentication.proto

#include "AccountAuthentication.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
namespace AccountAuthentication {
class CreateAccountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateAccount>
      _instance;
} _CreateAccount_default_instance_;
class CreateAccountSuccessDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateAccountSuccess>
      _instance;
} _CreateAccountSuccess_default_instance_;
class CreateAccountFailureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateAccountFailure>
      _instance;
} _CreateAccountFailure_default_instance_;
class AuthenticateAccountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthenticateAccount>
      _instance;
} _AuthenticateAccount_default_instance_;
class AuthenticateAccountSuccessDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthenticateAccountSuccess>
      _instance;
} _AuthenticateAccountSuccess_default_instance_;
class AuthenticateAccountFailureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AuthenticateAccountFailure>
      _instance;
} _AuthenticateAccountFailure_default_instance_;
}  // namespace AccountAuthentication
namespace protobuf_AccountAuthentication_2eproto {
void InitDefaultsCreateAccountImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::AccountAuthentication::_CreateAccount_default_instance_;
    new (ptr) ::AccountAuthentication::CreateAccount();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AccountAuthentication::CreateAccount::InitAsDefaultInstance();
}

void InitDefaultsCreateAccount() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateAccountImpl);
}

void InitDefaultsCreateAccountSuccessImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::AccountAuthentication::_CreateAccountSuccess_default_instance_;
    new (ptr) ::AccountAuthentication::CreateAccountSuccess();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AccountAuthentication::CreateAccountSuccess::InitAsDefaultInstance();
}

void InitDefaultsCreateAccountSuccess() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateAccountSuccessImpl);
}

void InitDefaultsCreateAccountFailureImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::AccountAuthentication::_CreateAccountFailure_default_instance_;
    new (ptr) ::AccountAuthentication::CreateAccountFailure();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AccountAuthentication::CreateAccountFailure::InitAsDefaultInstance();
}

void InitDefaultsCreateAccountFailure() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateAccountFailureImpl);
}

void InitDefaultsAuthenticateAccountImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::AccountAuthentication::_AuthenticateAccount_default_instance_;
    new (ptr) ::AccountAuthentication::AuthenticateAccount();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AccountAuthentication::AuthenticateAccount::InitAsDefaultInstance();
}

void InitDefaultsAuthenticateAccount() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthenticateAccountImpl);
}

void InitDefaultsAuthenticateAccountSuccessImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::AccountAuthentication::_AuthenticateAccountSuccess_default_instance_;
    new (ptr) ::AccountAuthentication::AuthenticateAccountSuccess();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AccountAuthentication::AuthenticateAccountSuccess::InitAsDefaultInstance();
}

void InitDefaultsAuthenticateAccountSuccess() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthenticateAccountSuccessImpl);
}

void InitDefaultsAuthenticateAccountFailureImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  {
    void* ptr = &::AccountAuthentication::_AuthenticateAccountFailure_default_instance_;
    new (ptr) ::AccountAuthentication::AuthenticateAccountFailure();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AccountAuthentication::AuthenticateAccountFailure::InitAsDefaultInstance();
}

void InitDefaultsAuthenticateAccountFailure() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthenticateAccountFailureImpl);
}

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountAuthentication::CreateAccount, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountAuthentication::CreateAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountAuthentication::CreateAccount, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountAuthentication::CreateAccount, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountAuthentication::CreateAccount, plaintextpassword_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountAuthentication::CreateAccountSuccess, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountAuthentication::CreateAccountSuccess, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountAuthentication::CreateAccountSuccess, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountAuthentication::CreateAccountSuccess, userid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountAuthentication::CreateAccountFailure, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountAuthentication::CreateAccountFailure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountAuthentication::CreateAccountFailure, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountAuthentication::CreateAccountFailure, reason_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountAuthentication::AuthenticateAccount, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountAuthentication::AuthenticateAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountAuthentication::AuthenticateAccount, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountAuthentication::AuthenticateAccount, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountAuthentication::AuthenticateAccount, plaintextpassword_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountAuthentication::AuthenticateAccountSuccess, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountAuthentication::AuthenticateAccountSuccess, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountAuthentication::AuthenticateAccountSuccess, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountAuthentication::AuthenticateAccountSuccess, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountAuthentication::AuthenticateAccountSuccess, creationdate_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountAuthentication::AuthenticateAccountFailure, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountAuthentication::AuthenticateAccountFailure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountAuthentication::AuthenticateAccountFailure, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AccountAuthentication::AuthenticateAccountFailure, reason_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::AccountAuthentication::CreateAccount)},
  { 11, 18, sizeof(::AccountAuthentication::CreateAccountSuccess)},
  { 20, 27, sizeof(::AccountAuthentication::CreateAccountFailure)},
  { 29, 37, sizeof(::AccountAuthentication::AuthenticateAccount)},
  { 40, 48, sizeof(::AccountAuthentication::AuthenticateAccountSuccess)},
  { 51, 58, sizeof(::AccountAuthentication::AuthenticateAccountFailure)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::AccountAuthentication::_CreateAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AccountAuthentication::_CreateAccountSuccess_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AccountAuthentication::_CreateAccountFailure_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AccountAuthentication::_AuthenticateAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AccountAuthentication::_AuthenticateAccountSuccess_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::AccountAuthentication::_AuthenticateAccountFailure_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "AccountAuthentication.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033AccountAuthentication.proto\022\025AccountAu"
      "thentication\"L\n\rCreateAccount\022\021\n\trequest"
      "Id\030\001 \002(\004\022\r\n\005email\030\002 \002(\t\022\031\n\021plaintextPass"
      "word\030\003 \002(\t\"9\n\024CreateAccountSuccess\022\021\n\tre"
      "questId\030\001 \002(\004\022\016\n\006userId\030\002 \002(\004\"\365\001\n\024Create"
      "AccountFailure\022\021\n\trequestId\030\001 \002(\004\022f\n\006rea"
      "son\030\002 \002(\0162\?.AccountAuthentication.Create"
      "AccountFailure.CreateFailureReason:\025INTE"
      "RNAL_SERVER_ERROR\"b\n\023CreateFailureReason"
      "\022\032\n\026ACCOUNT_ALREADY_EXISTS\020\000\022\024\n\020INVALID_"
      "PASSWORD\020\001\022\031\n\025INTERNAL_SERVER_ERROR\020\002\"R\n"
      "\023AuthenticateAccount\022\021\n\trequestId\030\001 \002(\004\022"
      "\r\n\005email\030\002 \002(\t\022\031\n\021plaintextPassword\030\003 \002("
      "\t\"U\n\032AuthenticateAccountSuccess\022\021\n\treque"
      "stId\030\001 \002(\004\022\016\n\006userId\030\002 \002(\004\022\024\n\014creationDa"
      "te\030\003 \002(\t\"\364\001\n\032AuthenticateAccountFailure\022"
      "\021\n\trequestId\030\001 \002(\004\022r\n\006reason\030\002 \002(\0162K.Acc"
      "ountAuthentication.AuthenticateAccountFa"
      "ilure.AuthenticateFailureReason:\025INTERNA"
      "L_SERVER_ERROR\"O\n\031AuthenticateFailureRea"
      "son\022\027\n\023INVALID_CREDENTIALS\020\000\022\031\n\025INTERNAL"
      "_SERVER_ERROR\020\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 855);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AccountAuthentication.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_AccountAuthentication_2eproto
namespace AccountAuthentication {
const ::google::protobuf::EnumDescriptor* CreateAccountFailure_CreateFailureReason_descriptor() {
  protobuf_AccountAuthentication_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AccountAuthentication_2eproto::file_level_enum_descriptors[0];
}
bool CreateAccountFailure_CreateFailureReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CreateAccountFailure_CreateFailureReason CreateAccountFailure::ACCOUNT_ALREADY_EXISTS;
const CreateAccountFailure_CreateFailureReason CreateAccountFailure::INVALID_PASSWORD;
const CreateAccountFailure_CreateFailureReason CreateAccountFailure::INTERNAL_SERVER_ERROR;
const CreateAccountFailure_CreateFailureReason CreateAccountFailure::CreateFailureReason_MIN;
const CreateAccountFailure_CreateFailureReason CreateAccountFailure::CreateFailureReason_MAX;
const int CreateAccountFailure::CreateFailureReason_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AuthenticateAccountFailure_AuthenticateFailureReason_descriptor() {
  protobuf_AccountAuthentication_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AccountAuthentication_2eproto::file_level_enum_descriptors[1];
}
bool AuthenticateAccountFailure_AuthenticateFailureReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AuthenticateAccountFailure_AuthenticateFailureReason AuthenticateAccountFailure::INVALID_CREDENTIALS;
const AuthenticateAccountFailure_AuthenticateFailureReason AuthenticateAccountFailure::INTERNAL_SERVER_ERROR;
const AuthenticateAccountFailure_AuthenticateFailureReason AuthenticateAccountFailure::AuthenticateFailureReason_MIN;
const AuthenticateAccountFailure_AuthenticateFailureReason AuthenticateAccountFailure::AuthenticateFailureReason_MAX;
const int AuthenticateAccountFailure::AuthenticateFailureReason_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void CreateAccount::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateAccount::kRequestIdFieldNumber;
const int CreateAccount::kEmailFieldNumber;
const int CreateAccount::kPlaintextPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateAccount::CreateAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AccountAuthentication_2eproto::InitDefaultsCreateAccount();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountAuthentication.CreateAccount)
}
CreateAccount::CreateAccount(const CreateAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_email()) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  plaintextpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_plaintextpassword()) {
    plaintextpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plaintextpassword_);
  }
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:AccountAuthentication.CreateAccount)
}

void CreateAccount::SharedCtor() {
  _cached_size_ = 0;
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plaintextpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = GOOGLE_ULONGLONG(0);
}

CreateAccount::~CreateAccount() {
  // @@protoc_insertion_point(destructor:AccountAuthentication.CreateAccount)
  SharedDtor();
}

void CreateAccount::SharedDtor() {
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plaintextpassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateAccount::descriptor() {
  ::protobuf_AccountAuthentication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AccountAuthentication_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateAccount& CreateAccount::default_instance() {
  ::protobuf_AccountAuthentication_2eproto::InitDefaultsCreateAccount();
  return *internal_default_instance();
}

CreateAccount* CreateAccount::New(::google::protobuf::Arena* arena) const {
  CreateAccount* n = new CreateAccount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountAuthentication.CreateAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!email_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*email_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!plaintextpassword_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*plaintextpassword_.UnsafeRawStringPointer())->clear();
    }
  }
  requestid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountAuthentication.CreateAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 requestId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_requestid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string email = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AccountAuthentication.CreateAccount.email");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string plaintextPassword = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plaintextpassword()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->plaintextpassword().data(), static_cast<int>(this->plaintextpassword().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AccountAuthentication.CreateAccount.plaintextPassword");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountAuthentication.CreateAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountAuthentication.CreateAccount)
  return false;
#undef DO_
}

void CreateAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountAuthentication.CreateAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 requestId = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->requestid(), output);
  }

  // required string email = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AccountAuthentication.CreateAccount.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->email(), output);
  }

  // required string plaintextPassword = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->plaintextpassword().data(), static_cast<int>(this->plaintextpassword().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AccountAuthentication.CreateAccount.plaintextPassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->plaintextpassword(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AccountAuthentication.CreateAccount)
}

::google::protobuf::uint8* CreateAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AccountAuthentication.CreateAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 requestId = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->requestid(), target);
  }

  // required string email = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AccountAuthentication.CreateAccount.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->email(), target);
  }

  // required string plaintextPassword = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->plaintextpassword().data(), static_cast<int>(this->plaintextpassword().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AccountAuthentication.CreateAccount.plaintextPassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->plaintextpassword(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AccountAuthentication.CreateAccount)
  return target;
}

size_t CreateAccount::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AccountAuthentication.CreateAccount)
  size_t total_size = 0;

  if (has_email()) {
    // required string email = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  if (has_plaintextpassword()) {
    // required string plaintextPassword = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plaintextpassword());
  }

  if (has_requestid()) {
    // required uint64 requestId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->requestid());
  }

  return total_size;
}
size_t CreateAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AccountAuthentication.CreateAccount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string email = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());

    // required string plaintextPassword = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plaintextpassword());

    // required uint64 requestId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->requestid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccountAuthentication.CreateAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccountAuthentication.CreateAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccountAuthentication.CreateAccount)
    MergeFrom(*source);
  }
}

void CreateAccount::MergeFrom(const CreateAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccountAuthentication.CreateAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_email();
      email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_plaintextpassword();
      plaintextpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plaintextpassword_);
    }
    if (cached_has_bits & 0x00000004u) {
      requestid_ = from.requestid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CreateAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccountAuthentication.CreateAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateAccount::CopyFrom(const CreateAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountAuthentication.CreateAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateAccount::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void CreateAccount::Swap(CreateAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateAccount::InternalSwap(CreateAccount* other) {
  using std::swap;
  email_.Swap(&other->email_);
  plaintextpassword_.Swap(&other->plaintextpassword_);
  swap(requestid_, other->requestid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateAccount::GetMetadata() const {
  protobuf_AccountAuthentication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AccountAuthentication_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateAccountSuccess::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateAccountSuccess::kRequestIdFieldNumber;
const int CreateAccountSuccess::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateAccountSuccess::CreateAccountSuccess()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AccountAuthentication_2eproto::InitDefaultsCreateAccountSuccess();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountAuthentication.CreateAccountSuccess)
}
CreateAccountSuccess::CreateAccountSuccess(const CreateAccountSuccess& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&requestid_, &from.requestid_,
    static_cast<size_t>(reinterpret_cast<char*>(&userid_) -
    reinterpret_cast<char*>(&requestid_)) + sizeof(userid_));
  // @@protoc_insertion_point(copy_constructor:AccountAuthentication.CreateAccountSuccess)
}

void CreateAccountSuccess::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&requestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&userid_) -
      reinterpret_cast<char*>(&requestid_)) + sizeof(userid_));
}

CreateAccountSuccess::~CreateAccountSuccess() {
  // @@protoc_insertion_point(destructor:AccountAuthentication.CreateAccountSuccess)
  SharedDtor();
}

void CreateAccountSuccess::SharedDtor() {
}

void CreateAccountSuccess::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateAccountSuccess::descriptor() {
  ::protobuf_AccountAuthentication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AccountAuthentication_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateAccountSuccess& CreateAccountSuccess::default_instance() {
  ::protobuf_AccountAuthentication_2eproto::InitDefaultsCreateAccountSuccess();
  return *internal_default_instance();
}

CreateAccountSuccess* CreateAccountSuccess::New(::google::protobuf::Arena* arena) const {
  CreateAccountSuccess* n = new CreateAccountSuccess;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateAccountSuccess::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountAuthentication.CreateAccountSuccess)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&requestid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&userid_) -
        reinterpret_cast<char*>(&requestid_)) + sizeof(userid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateAccountSuccess::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountAuthentication.CreateAccountSuccess)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 requestId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_requestid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 userId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountAuthentication.CreateAccountSuccess)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountAuthentication.CreateAccountSuccess)
  return false;
#undef DO_
}

void CreateAccountSuccess::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountAuthentication.CreateAccountSuccess)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 requestId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->requestid(), output);
  }

  // required uint64 userId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AccountAuthentication.CreateAccountSuccess)
}

::google::protobuf::uint8* CreateAccountSuccess::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AccountAuthentication.CreateAccountSuccess)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 requestId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->requestid(), target);
  }

  // required uint64 userId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AccountAuthentication.CreateAccountSuccess)
  return target;
}

size_t CreateAccountSuccess::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AccountAuthentication.CreateAccountSuccess)
  size_t total_size = 0;

  if (has_requestid()) {
    // required uint64 requestId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->requestid());
  }

  if (has_userid()) {
    // required uint64 userId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  return total_size;
}
size_t CreateAccountSuccess::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AccountAuthentication.CreateAccountSuccess)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 requestId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->requestid());

    // required uint64 userId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateAccountSuccess::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccountAuthentication.CreateAccountSuccess)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateAccountSuccess* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateAccountSuccess>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccountAuthentication.CreateAccountSuccess)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccountAuthentication.CreateAccountSuccess)
    MergeFrom(*source);
  }
}

void CreateAccountSuccess::MergeFrom(const CreateAccountSuccess& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccountAuthentication.CreateAccountSuccess)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      requestid_ = from.requestid_;
    }
    if (cached_has_bits & 0x00000002u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CreateAccountSuccess::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccountAuthentication.CreateAccountSuccess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateAccountSuccess::CopyFrom(const CreateAccountSuccess& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountAuthentication.CreateAccountSuccess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateAccountSuccess::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CreateAccountSuccess::Swap(CreateAccountSuccess* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateAccountSuccess::InternalSwap(CreateAccountSuccess* other) {
  using std::swap;
  swap(requestid_, other->requestid_);
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateAccountSuccess::GetMetadata() const {
  protobuf_AccountAuthentication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AccountAuthentication_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateAccountFailure::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateAccountFailure::kRequestIdFieldNumber;
const int CreateAccountFailure::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateAccountFailure::CreateAccountFailure()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AccountAuthentication_2eproto::InitDefaultsCreateAccountFailure();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountAuthentication.CreateAccountFailure)
}
CreateAccountFailure::CreateAccountFailure(const CreateAccountFailure& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&requestid_, &from.requestid_,
    static_cast<size_t>(reinterpret_cast<char*>(&reason_) -
    reinterpret_cast<char*>(&requestid_)) + sizeof(reason_));
  // @@protoc_insertion_point(copy_constructor:AccountAuthentication.CreateAccountFailure)
}

void CreateAccountFailure::SharedCtor() {
  _cached_size_ = 0;
  requestid_ = GOOGLE_ULONGLONG(0);
  reason_ = 2;
}

CreateAccountFailure::~CreateAccountFailure() {
  // @@protoc_insertion_point(destructor:AccountAuthentication.CreateAccountFailure)
  SharedDtor();
}

void CreateAccountFailure::SharedDtor() {
}

void CreateAccountFailure::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateAccountFailure::descriptor() {
  ::protobuf_AccountAuthentication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AccountAuthentication_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateAccountFailure& CreateAccountFailure::default_instance() {
  ::protobuf_AccountAuthentication_2eproto::InitDefaultsCreateAccountFailure();
  return *internal_default_instance();
}

CreateAccountFailure* CreateAccountFailure::New(::google::protobuf::Arena* arena) const {
  CreateAccountFailure* n = new CreateAccountFailure;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateAccountFailure::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountAuthentication.CreateAccountFailure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    requestid_ = GOOGLE_ULONGLONG(0);
    reason_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateAccountFailure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountAuthentication.CreateAccountFailure)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 requestId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_requestid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .AccountAuthentication.CreateAccountFailure.CreateFailureReason reason = 2 [default = INTERNAL_SERVER_ERROR];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AccountAuthentication::CreateAccountFailure_CreateFailureReason_IsValid(value)) {
            set_reason(static_cast< ::AccountAuthentication::CreateAccountFailure_CreateFailureReason >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountAuthentication.CreateAccountFailure)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountAuthentication.CreateAccountFailure)
  return false;
#undef DO_
}

void CreateAccountFailure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountAuthentication.CreateAccountFailure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 requestId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->requestid(), output);
  }

  // required .AccountAuthentication.CreateAccountFailure.CreateFailureReason reason = 2 [default = INTERNAL_SERVER_ERROR];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->reason(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AccountAuthentication.CreateAccountFailure)
}

::google::protobuf::uint8* CreateAccountFailure::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AccountAuthentication.CreateAccountFailure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 requestId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->requestid(), target);
  }

  // required .AccountAuthentication.CreateAccountFailure.CreateFailureReason reason = 2 [default = INTERNAL_SERVER_ERROR];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->reason(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AccountAuthentication.CreateAccountFailure)
  return target;
}

size_t CreateAccountFailure::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AccountAuthentication.CreateAccountFailure)
  size_t total_size = 0;

  if (has_requestid()) {
    // required uint64 requestId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->requestid());
  }

  if (has_reason()) {
    // required .AccountAuthentication.CreateAccountFailure.CreateFailureReason reason = 2 [default = INTERNAL_SERVER_ERROR];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  return total_size;
}
size_t CreateAccountFailure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AccountAuthentication.CreateAccountFailure)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 requestId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->requestid());

    // required .AccountAuthentication.CreateAccountFailure.CreateFailureReason reason = 2 [default = INTERNAL_SERVER_ERROR];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateAccountFailure::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccountAuthentication.CreateAccountFailure)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateAccountFailure* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateAccountFailure>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccountAuthentication.CreateAccountFailure)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccountAuthentication.CreateAccountFailure)
    MergeFrom(*source);
  }
}

void CreateAccountFailure::MergeFrom(const CreateAccountFailure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccountAuthentication.CreateAccountFailure)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      requestid_ = from.requestid_;
    }
    if (cached_has_bits & 0x00000002u) {
      reason_ = from.reason_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CreateAccountFailure::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccountAuthentication.CreateAccountFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateAccountFailure::CopyFrom(const CreateAccountFailure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountAuthentication.CreateAccountFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateAccountFailure::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CreateAccountFailure::Swap(CreateAccountFailure* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateAccountFailure::InternalSwap(CreateAccountFailure* other) {
  using std::swap;
  swap(requestid_, other->requestid_);
  swap(reason_, other->reason_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateAccountFailure::GetMetadata() const {
  protobuf_AccountAuthentication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AccountAuthentication_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthenticateAccount::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthenticateAccount::kRequestIdFieldNumber;
const int AuthenticateAccount::kEmailFieldNumber;
const int AuthenticateAccount::kPlaintextPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthenticateAccount::AuthenticateAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AccountAuthentication_2eproto::InitDefaultsAuthenticateAccount();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountAuthentication.AuthenticateAccount)
}
AuthenticateAccount::AuthenticateAccount(const AuthenticateAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_email()) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  plaintextpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_plaintextpassword()) {
    plaintextpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plaintextpassword_);
  }
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:AccountAuthentication.AuthenticateAccount)
}

void AuthenticateAccount::SharedCtor() {
  _cached_size_ = 0;
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plaintextpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = GOOGLE_ULONGLONG(0);
}

AuthenticateAccount::~AuthenticateAccount() {
  // @@protoc_insertion_point(destructor:AccountAuthentication.AuthenticateAccount)
  SharedDtor();
}

void AuthenticateAccount::SharedDtor() {
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plaintextpassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthenticateAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthenticateAccount::descriptor() {
  ::protobuf_AccountAuthentication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AccountAuthentication_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthenticateAccount& AuthenticateAccount::default_instance() {
  ::protobuf_AccountAuthentication_2eproto::InitDefaultsAuthenticateAccount();
  return *internal_default_instance();
}

AuthenticateAccount* AuthenticateAccount::New(::google::protobuf::Arena* arena) const {
  AuthenticateAccount* n = new AuthenticateAccount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthenticateAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountAuthentication.AuthenticateAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!email_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*email_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!plaintextpassword_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*plaintextpassword_.UnsafeRawStringPointer())->clear();
    }
  }
  requestid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AuthenticateAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountAuthentication.AuthenticateAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 requestId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_requestid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string email = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AccountAuthentication.AuthenticateAccount.email");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string plaintextPassword = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plaintextpassword()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->plaintextpassword().data(), static_cast<int>(this->plaintextpassword().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AccountAuthentication.AuthenticateAccount.plaintextPassword");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountAuthentication.AuthenticateAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountAuthentication.AuthenticateAccount)
  return false;
#undef DO_
}

void AuthenticateAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountAuthentication.AuthenticateAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 requestId = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->requestid(), output);
  }

  // required string email = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AccountAuthentication.AuthenticateAccount.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->email(), output);
  }

  // required string plaintextPassword = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->plaintextpassword().data(), static_cast<int>(this->plaintextpassword().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AccountAuthentication.AuthenticateAccount.plaintextPassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->plaintextpassword(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AccountAuthentication.AuthenticateAccount)
}

::google::protobuf::uint8* AuthenticateAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AccountAuthentication.AuthenticateAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 requestId = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->requestid(), target);
  }

  // required string email = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AccountAuthentication.AuthenticateAccount.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->email(), target);
  }

  // required string plaintextPassword = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->plaintextpassword().data(), static_cast<int>(this->plaintextpassword().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AccountAuthentication.AuthenticateAccount.plaintextPassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->plaintextpassword(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AccountAuthentication.AuthenticateAccount)
  return target;
}

size_t AuthenticateAccount::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AccountAuthentication.AuthenticateAccount)
  size_t total_size = 0;

  if (has_email()) {
    // required string email = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  if (has_plaintextpassword()) {
    // required string plaintextPassword = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plaintextpassword());
  }

  if (has_requestid()) {
    // required uint64 requestId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->requestid());
  }

  return total_size;
}
size_t AuthenticateAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AccountAuthentication.AuthenticateAccount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string email = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());

    // required string plaintextPassword = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plaintextpassword());

    // required uint64 requestId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->requestid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthenticateAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccountAuthentication.AuthenticateAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthenticateAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthenticateAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccountAuthentication.AuthenticateAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccountAuthentication.AuthenticateAccount)
    MergeFrom(*source);
  }
}

void AuthenticateAccount::MergeFrom(const AuthenticateAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccountAuthentication.AuthenticateAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_email();
      email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_plaintextpassword();
      plaintextpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plaintextpassword_);
    }
    if (cached_has_bits & 0x00000004u) {
      requestid_ = from.requestid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AuthenticateAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccountAuthentication.AuthenticateAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticateAccount::CopyFrom(const AuthenticateAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountAuthentication.AuthenticateAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticateAccount::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void AuthenticateAccount::Swap(AuthenticateAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthenticateAccount::InternalSwap(AuthenticateAccount* other) {
  using std::swap;
  email_.Swap(&other->email_);
  plaintextpassword_.Swap(&other->plaintextpassword_);
  swap(requestid_, other->requestid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthenticateAccount::GetMetadata() const {
  protobuf_AccountAuthentication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AccountAuthentication_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthenticateAccountSuccess::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthenticateAccountSuccess::kRequestIdFieldNumber;
const int AuthenticateAccountSuccess::kUserIdFieldNumber;
const int AuthenticateAccountSuccess::kCreationDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthenticateAccountSuccess::AuthenticateAccountSuccess()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AccountAuthentication_2eproto::InitDefaultsAuthenticateAccountSuccess();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountAuthentication.AuthenticateAccountSuccess)
}
AuthenticateAccountSuccess::AuthenticateAccountSuccess(const AuthenticateAccountSuccess& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  creationdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_creationdate()) {
    creationdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.creationdate_);
  }
  ::memcpy(&requestid_, &from.requestid_,
    static_cast<size_t>(reinterpret_cast<char*>(&userid_) -
    reinterpret_cast<char*>(&requestid_)) + sizeof(userid_));
  // @@protoc_insertion_point(copy_constructor:AccountAuthentication.AuthenticateAccountSuccess)
}

void AuthenticateAccountSuccess::SharedCtor() {
  _cached_size_ = 0;
  creationdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&requestid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&userid_) -
      reinterpret_cast<char*>(&requestid_)) + sizeof(userid_));
}

AuthenticateAccountSuccess::~AuthenticateAccountSuccess() {
  // @@protoc_insertion_point(destructor:AccountAuthentication.AuthenticateAccountSuccess)
  SharedDtor();
}

void AuthenticateAccountSuccess::SharedDtor() {
  creationdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthenticateAccountSuccess::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthenticateAccountSuccess::descriptor() {
  ::protobuf_AccountAuthentication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AccountAuthentication_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthenticateAccountSuccess& AuthenticateAccountSuccess::default_instance() {
  ::protobuf_AccountAuthentication_2eproto::InitDefaultsAuthenticateAccountSuccess();
  return *internal_default_instance();
}

AuthenticateAccountSuccess* AuthenticateAccountSuccess::New(::google::protobuf::Arena* arena) const {
  AuthenticateAccountSuccess* n = new AuthenticateAccountSuccess;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthenticateAccountSuccess::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountAuthentication.AuthenticateAccountSuccess)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (has_creationdate()) {
    GOOGLE_DCHECK(!creationdate_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*creationdate_.UnsafeRawStringPointer())->clear();
  }
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 6u) {
    ::memset(&requestid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&userid_) -
        reinterpret_cast<char*>(&requestid_)) + sizeof(userid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AuthenticateAccountSuccess::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountAuthentication.AuthenticateAccountSuccess)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 requestId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_requestid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 userId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string creationDate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creationdate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->creationdate().data(), static_cast<int>(this->creationdate().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AccountAuthentication.AuthenticateAccountSuccess.creationDate");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountAuthentication.AuthenticateAccountSuccess)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountAuthentication.AuthenticateAccountSuccess)
  return false;
#undef DO_
}

void AuthenticateAccountSuccess::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountAuthentication.AuthenticateAccountSuccess)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 requestId = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->requestid(), output);
  }

  // required uint64 userId = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->userid(), output);
  }

  // required string creationDate = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->creationdate().data(), static_cast<int>(this->creationdate().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AccountAuthentication.AuthenticateAccountSuccess.creationDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->creationdate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AccountAuthentication.AuthenticateAccountSuccess)
}

::google::protobuf::uint8* AuthenticateAccountSuccess::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AccountAuthentication.AuthenticateAccountSuccess)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 requestId = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->requestid(), target);
  }

  // required uint64 userId = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->userid(), target);
  }

  // required string creationDate = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->creationdate().data(), static_cast<int>(this->creationdate().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AccountAuthentication.AuthenticateAccountSuccess.creationDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->creationdate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AccountAuthentication.AuthenticateAccountSuccess)
  return target;
}

size_t AuthenticateAccountSuccess::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AccountAuthentication.AuthenticateAccountSuccess)
  size_t total_size = 0;

  if (has_creationdate()) {
    // required string creationDate = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->creationdate());
  }

  if (has_requestid()) {
    // required uint64 requestId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->requestid());
  }

  if (has_userid()) {
    // required uint64 userId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());
  }

  return total_size;
}
size_t AuthenticateAccountSuccess::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AccountAuthentication.AuthenticateAccountSuccess)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string creationDate = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->creationdate());

    // required uint64 requestId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->requestid());

    // required uint64 userId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->userid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthenticateAccountSuccess::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccountAuthentication.AuthenticateAccountSuccess)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthenticateAccountSuccess* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthenticateAccountSuccess>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccountAuthentication.AuthenticateAccountSuccess)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccountAuthentication.AuthenticateAccountSuccess)
    MergeFrom(*source);
  }
}

void AuthenticateAccountSuccess::MergeFrom(const AuthenticateAccountSuccess& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccountAuthentication.AuthenticateAccountSuccess)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_creationdate();
      creationdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.creationdate_);
    }
    if (cached_has_bits & 0x00000002u) {
      requestid_ = from.requestid_;
    }
    if (cached_has_bits & 0x00000004u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AuthenticateAccountSuccess::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccountAuthentication.AuthenticateAccountSuccess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticateAccountSuccess::CopyFrom(const AuthenticateAccountSuccess& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountAuthentication.AuthenticateAccountSuccess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticateAccountSuccess::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void AuthenticateAccountSuccess::Swap(AuthenticateAccountSuccess* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthenticateAccountSuccess::InternalSwap(AuthenticateAccountSuccess* other) {
  using std::swap;
  creationdate_.Swap(&other->creationdate_);
  swap(requestid_, other->requestid_);
  swap(userid_, other->userid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthenticateAccountSuccess::GetMetadata() const {
  protobuf_AccountAuthentication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AccountAuthentication_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AuthenticateAccountFailure::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthenticateAccountFailure::kRequestIdFieldNumber;
const int AuthenticateAccountFailure::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthenticateAccountFailure::AuthenticateAccountFailure()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AccountAuthentication_2eproto::InitDefaultsAuthenticateAccountFailure();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AccountAuthentication.AuthenticateAccountFailure)
}
AuthenticateAccountFailure::AuthenticateAccountFailure(const AuthenticateAccountFailure& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&requestid_, &from.requestid_,
    static_cast<size_t>(reinterpret_cast<char*>(&reason_) -
    reinterpret_cast<char*>(&requestid_)) + sizeof(reason_));
  // @@protoc_insertion_point(copy_constructor:AccountAuthentication.AuthenticateAccountFailure)
}

void AuthenticateAccountFailure::SharedCtor() {
  _cached_size_ = 0;
  requestid_ = GOOGLE_ULONGLONG(0);
  reason_ = 1;
}

AuthenticateAccountFailure::~AuthenticateAccountFailure() {
  // @@protoc_insertion_point(destructor:AccountAuthentication.AuthenticateAccountFailure)
  SharedDtor();
}

void AuthenticateAccountFailure::SharedDtor() {
}

void AuthenticateAccountFailure::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthenticateAccountFailure::descriptor() {
  ::protobuf_AccountAuthentication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AccountAuthentication_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthenticateAccountFailure& AuthenticateAccountFailure::default_instance() {
  ::protobuf_AccountAuthentication_2eproto::InitDefaultsAuthenticateAccountFailure();
  return *internal_default_instance();
}

AuthenticateAccountFailure* AuthenticateAccountFailure::New(::google::protobuf::Arena* arena) const {
  AuthenticateAccountFailure* n = new AuthenticateAccountFailure;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthenticateAccountFailure::Clear() {
// @@protoc_insertion_point(message_clear_start:AccountAuthentication.AuthenticateAccountFailure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    requestid_ = GOOGLE_ULONGLONG(0);
    reason_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AuthenticateAccountFailure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AccountAuthentication.AuthenticateAccountFailure)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 requestId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_requestid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .AccountAuthentication.AuthenticateAccountFailure.AuthenticateFailureReason reason = 2 [default = INTERNAL_SERVER_ERROR];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AccountAuthentication::AuthenticateAccountFailure_AuthenticateFailureReason_IsValid(value)) {
            set_reason(static_cast< ::AccountAuthentication::AuthenticateAccountFailure_AuthenticateFailureReason >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AccountAuthentication.AuthenticateAccountFailure)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AccountAuthentication.AuthenticateAccountFailure)
  return false;
#undef DO_
}

void AuthenticateAccountFailure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AccountAuthentication.AuthenticateAccountFailure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 requestId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->requestid(), output);
  }

  // required .AccountAuthentication.AuthenticateAccountFailure.AuthenticateFailureReason reason = 2 [default = INTERNAL_SERVER_ERROR];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->reason(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AccountAuthentication.AuthenticateAccountFailure)
}

::google::protobuf::uint8* AuthenticateAccountFailure::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AccountAuthentication.AuthenticateAccountFailure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 requestId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->requestid(), target);
  }

  // required .AccountAuthentication.AuthenticateAccountFailure.AuthenticateFailureReason reason = 2 [default = INTERNAL_SERVER_ERROR];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->reason(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AccountAuthentication.AuthenticateAccountFailure)
  return target;
}

size_t AuthenticateAccountFailure::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AccountAuthentication.AuthenticateAccountFailure)
  size_t total_size = 0;

  if (has_requestid()) {
    // required uint64 requestId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->requestid());
  }

  if (has_reason()) {
    // required .AccountAuthentication.AuthenticateAccountFailure.AuthenticateFailureReason reason = 2 [default = INTERNAL_SERVER_ERROR];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  return total_size;
}
size_t AuthenticateAccountFailure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AccountAuthentication.AuthenticateAccountFailure)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 requestId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->requestid());

    // required .AccountAuthentication.AuthenticateAccountFailure.AuthenticateFailureReason reason = 2 [default = INTERNAL_SERVER_ERROR];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthenticateAccountFailure::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AccountAuthentication.AuthenticateAccountFailure)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthenticateAccountFailure* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthenticateAccountFailure>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AccountAuthentication.AuthenticateAccountFailure)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AccountAuthentication.AuthenticateAccountFailure)
    MergeFrom(*source);
  }
}

void AuthenticateAccountFailure::MergeFrom(const AuthenticateAccountFailure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AccountAuthentication.AuthenticateAccountFailure)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      requestid_ = from.requestid_;
    }
    if (cached_has_bits & 0x00000002u) {
      reason_ = from.reason_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AuthenticateAccountFailure::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AccountAuthentication.AuthenticateAccountFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthenticateAccountFailure::CopyFrom(const AuthenticateAccountFailure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AccountAuthentication.AuthenticateAccountFailure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticateAccountFailure::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void AuthenticateAccountFailure::Swap(AuthenticateAccountFailure* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthenticateAccountFailure::InternalSwap(AuthenticateAccountFailure* other) {
  using std::swap;
  swap(requestid_, other->requestid_);
  swap(reason_, other->reason_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthenticateAccountFailure::GetMetadata() const {
  protobuf_AccountAuthentication_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AccountAuthentication_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace AccountAuthentication

// @@protoc_insertion_point(global_scope)
